- hosts: all
  tasks:
  - name: Criar o arquivo ~/ip para pegar o IP da maquina
    ansible.builtin.copy:
      dest: "~/ip"
      content: |
        curl -s checkip.amazonaws.com
  - name: Mudar a permissao do arquivo ~/ip
    ansible.builtin.file:
      path: ~/ip
      mode: u+rwx,g+rwx,o+rx

  #- name: Desabilitar GPGCheck certs em amzn2-core.repo
  #  become: yes
  #  # yum repo configuration file, the line gpgcheck=1 indicates that GPG checking should be done for all packages in this repository
  #  shell: "sed -i 's|gpgcheck=1|gpgcheck=0|' /etc/yum.repos.d/amzn2-core.repo"
  #  when: ansible_os_family == "RedHat"

  - name: Configurar /etc/yum.repos.d/kubernetes.repo com GPG desabilitado
    become: yes
    shell: |
      cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
      [kubernetes]
      name=Kubernetes
      baseurl=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/
      enabled=1
      gpgcheck=1
      gpgkey=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/repodata/repomd.xml.key
      exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni
      EOF
    when: ansible_os_family == "RedHat"

  - name: Instalar lista de pacotes via yum
    become: yes
    yum:
    #ansible.builtin.package:
      name:
        - python3
        - python3-pip
        #- python3-venv
        - wget
        - git
        - jq
      state: present
      disable_gpg_check: yes
      lock_timeout: 180
    when: ansible_os_family == "RedHat"
    
  - name: Instalar lista de pacotes (ubuntu)
    become: yes
    apt:
    #ansible.builtin.package:
      name:
        - python3
        - python3-pip
        - python3-venv
        - wget
        - git
        - jq
      state: present
      update_cache: true
      cache_valid_time: 3600
      force_apt_get: true
    register: apt_action
    retries: 100
    until: apt_action is success or ('Failed to lock apt for exclusive operation' not in apt_action.msg and '/var/lib/dpkg/lock' not in apt_action.msg)
    when: ansible_os_family == "Debian"
    
  - name: Preparar utilitÃ¡rio ccat
    ansible.builtin.shell: |
      wget https://github.com/jingweno/ccat/releases/download/v1.1.0/linux-amd64-1.1.0.tar.gz
      tar -zxvf linux-amd64-1.1.0.tar.gz 
      chmod +x linux-amd64-1.1.0/ccat
      sudo mv linux-amd64-1.1.0/ccat /usr/local/bin/ccat
      echo "alias cat='/usr/local/bin/ccat --bg=dark'" | sudo tee -a /etc/profile
      rm -rf linux-amd64-1.1.0*
    args:
      executable: /bin/bash
      
  - name: Criar diretorio vazio das credenciais da AWS
    ansible.builtin.file:
      path: ~/.aws
      state: directory
      mode: '0755'
      
  - name: Criar arquivo vazio das credenciais da AWS
    ansible.builtin.file:
      path: ~/.aws/credentials
      state: touch
      mode: u+rw,g+rw,o+rw

  - name: Ajustar o .bashrc (ubuntu)
    shell: |
      cp /etc/skel/.bashrc ~/
      systemctl stop apache2.service
    args:
      executable: /bin/bash
    when: ansible_os_family == "Debian"
