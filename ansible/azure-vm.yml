- name: Preparando Cloud9
  hosts: all
  #hosts: localhost
  #connection: local
  tasks:
  - name: Preparar utilitário ccat
    ansible.builtin.shell: |
      wget https://github.com/jingweno/ccat/releases/download/v1.1.0/linux-amd64-1.1.0.tar.gz
      tar -zxvf linux-amd64-1.1.0.tar.gz 
      chmod +x linux-amd64-1.1.0/ccat
      sudo mv linux-amd64-1.1.0/ccat /usr/local/bin/ccat
      echo "alias cat='/usr/local/bin/ccat --bg=dark'" | sudo tee -a /etc/profile
      rm -rf linux-amd64-1.1.0*
    args:
      executable: /bin/bash
      
  #- name: Ajustar o .bashrc (ubuntu)
  #  shell: |
  #    cp /etc/skel/.bashrc ~/
  #  args:
  #    executable: /bin/bash
  #  when: ansible_os_family == "Debian"

  - name: atualizar index page
    become: yes
    shell: |
      sudo curl -s "https://tonanuvem.github.io/page/docs/open.html" -o "/var/www/html/index.html" 
  
  - name: Criar o arquivo ~/ip para pegar o IP da maquina
    ansible.builtin.copy:
      dest: "~/environment/ip"
      content: |
        curl -s checkip.amazonaws.com
  - name: Mudar a permissao do arquivo ~/ip
    ansible.builtin.file:
      path: ~/environment/ip
      mode: u+rwx,g+rwx,o+rx


  - name: Instalacão do Springboot
    become: yes
    shell: |
      curl -s "https://get.sdkman.io" | bash > /dev/null
      #bash ~/.sdkman/bin/sdkman-init.sh
      #source "$HOME/.sdkman/bin/sdkman-init.sh"
      #sdk install springboot 2.7.10
      #spring version
    args:
      executable: /bin/bash
      
  - name: Instalar o docker-compose
    become: yes
    shell: |
      sudo curl -L "https://github.com/docker/compose/releases/download/v2.35.1/docker-compose-linux-x86_64" -o /usr/local/bin/docker-compose
      sudo chmod +x /usr/local/bin/docker-compose

  - name: Instalar o Terraform
    become: yes
    shell: |
      #curl -s "https://releases.hashicorp.com/terraform/0.12.29/terraform_0.12.29_linux_amd64.zip" -o "terraform_linux_amd64.zip"
      curl -s "https://releases.hashicorp.com/terraform/1.8.2/terraform_1.8.2_linux_amd64.zip" -o "terraform_linux_amd64.zip"
      unzip terraform_linux_amd64.zip
      sudo mv terraform /usr/bin/
      rm -rf terraform_linux_amd64.zip

  - name: Instalar ferramentas K8S
    become: yes
    shell: |
      # minikube
      #curl -s "https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64" -o "minikube-linux"
      #chmod +x minikube-linux 
      #sudo mv minikube-linux /usr/bin/minikube
      #mkdir $HOME/.minikube 
      #sudo chown -R $USER $HOME/.minikube
      #sudo chmod -R u+wrx $HOME/.minikube
      # kubectl
      #sudo chown -R $USER $HOME/.kube
      #mkdir $HOME/.kube
      #sudo snap install kubectl --classic
      # helm
      #curl -s https://get.helm.sh/helm-v3.17.2-linux-amd64.tar.gz -o helm-linux-amd64.tar.gz
      #tar -zxvf helm-linux-amd64.tar.gz
      #sudo mv linux-amd64/helm /usr/local/bin/helm
      #rm -rf linux-amd64
      #rm -rf helm-linux-amd64.tar.gz

  - name: Instalar lista de pacotes (ubuntu)
    become: yes
    apt:
      name:
        - python3
        - python3-pip
        - python3-venv
        #- python3-dnf
        - wget
        - git
        - jq
        - maven 
        - build-essential 
        - zlib1g-dev 
        - libssl-dev 
        - libncurses-dev 
        - libffi-dev 
        - libsqlite3-dev 
        - libreadline-dev 
        - libbz2-dev
        - openjdk-17-jdk
        - docker-ce
        - docker-ce-cli 
        - containerd.io 
        - docker-buildx-plugin 
        - docker-compose-plugin
        
      state: present
      update_cache: true
      cache_valid_time: 3600
      force_apt_get: true
    register: apt_action
    retries: 100
    delay: 10
    until: "apt_action is not failed"
    when: ansible_os_family == "Debian" or ansible_os_family == 'Ubuntu'
    
#- debug: msg="{{ log.stdout_lines }}"
